swagger: "2.0"
info:
  description: "This project proposes the creation of an online ordering system for a restaurant."
  version: "1.0.0"
  title: "Delilah Rest√≥"
  contact:
    email: "nicolaszuleta95@gmail.com"
tags:
  - name: "users"
    description: "User operations"
  - name: "dishes"
    description: "Dishes operations"
  - name: "orders"
    description: "Order operations"
schemes:
- "https"
- "http"
paths:
  /user:
    post:
      tags:
      - "users"
      summary: "register a new user"
      description: ""
      operationId: "newUser"
      parameters:
      - in: "body"
        name: "body"
        description: "Object to add to a user"
        required: true
        schema:
          $ref: "#/definitions/users"
      responses:
        "200":
          description: "user registered successfully"
        "400":
          description: "Invalid input"
  /dish:
    post:
      tags:
        - "dishes"
      summary: "Add a new dish"
      description: "Add a new dish"
      operationId: "postDish"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Dish object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/dishes"
      responses:
        "200":
          description: "Added dish successfully"
        "405":
            description: "Invalid input"
    get:
      tags:
      - "dishes"
      summary: "Get all the dishes"
      description: "Get all the dishes"
      operationId: "getDishes"
      responses:
        "200":
          description: "returned dishes successfully"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/dishes'
        "404":
          description: "Not Found"
  /dish/{dish_id}:
    get:
      tags:
        - "dishes"
      summary: "Get a dish by it's ID"
      parameters:
      - name: "dish_ID"
        in: "path"
        description: "ID of dish to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/dishes"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Dish not found"
    delete:
      tags:
      - "dishes"
      summary: "Delete a dish"
      parameters:
        - name: dish_id
          in: path
          description: "ID of the dish to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "Deleted dish successfully"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Dish not found"
    put:
      tags:
      - "dishes"
      summary: "Update an existing dish"
      description: ""
      operationId: "updateDish"
      parameters:
      - in: path
        name: dish_id
        required: true
        type: integer
      - in: body
        name: Producto
        schema:
          $ref: '#/definitions/dishes'
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Dish not found"
        "405":
          description: "Validation exception"
definitions:
  users:
    type: "object"
    properties:
      user_id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      fullname:
        type: "string"
      email:
        type: "string"
      address:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userType:
        type: "boolean"
        description: "columna para determinar si el usuario es Admin o no"
    xml:
      name: "users"
  dishes:
    type: "object"
    properties:
      dish_id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      price:
        type: "number"
      description:
        type: "string"
      category:
        type: "string"
      photo:
        type: "string"
    xml:
      name: "dishes"
  orders:
    type: "object"
    properties:
      order_id:
        type: "integer"
        format: "int64"
      user_id:
        type: "integer"
        format: "int64"
      date:
        type: "string"
        format: "date"
      total:
        type: "number"
      state:
        type: "string"
      address:
        type: "string"
      pay_type:
        type: "string"
    xml:
      name: "orders"
  items:
    type: "object"
    properties:
      item_id:
        type: "integer"
        format: "int64"
      order_id:
        type: "integer"
        format: "int64"
      dish_id:
        type: "integer"
        format: "int64"
      price:
        type: "number"
      quantity:
        type: "integer"
        format: "int32"
    xml:
      name: "items"
  favs:
    type: "object"
    properties:
      user_id:
        type: "integer"
        format: "int64"
      dish_id:
        type: "integer"
        format: "int64"
    xml:
      name: "favs"